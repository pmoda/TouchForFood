@model TouchForFood.Models.user
@using TouchForFood.App_GlobalResources
@using TouchForFood.Util.Security

@{
    ViewBag.Title = "Edit User";
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div class="one-third column">
    &nbsp;
</div>

<div class="one-third column">
    @using (Html.BeginForm("Edit", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <h3 class="main-green">Edit</h3>    
        @Html.ValidationSummary(true)
        <fieldset>
            @Html.HiddenFor(model => model.id)
            @Html.HiddenFor(model => model.username)
            @Html.HiddenFor(model => model.version)
            @Html.HiddenFor(model => model.image_url)
            
            <div class="editor-label">
                @Html.LabelFor(model => model.image_url)
            </div>
            <div class="editor-field">
            @if (Model.image_url != null && Model.image_url.Length != 0)
            {
                <img src="@Url.Content(Model.image_url)" alt="IMAGES" height="62" width="62"/>
            }
        
            <input type="file" name="file" id="file"/>
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.username)
            </div>
            <div class="editor-field">
                @Html.DisplayTextFor(model => model.username)                
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.first_name)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.first_name)
                @Html.ValidationMessageFor(model => model.first_name)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.last_name)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.last_name)
                @Html.ValidationMessageFor(model => model.last_name)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.email)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.email)
                @Html.ValidationMessageFor(model => model.email)
            </div>
            
            <div class="editor-label">
                @Html.LabelFor(model => model.password, "Password (Optional)")
            </div>
            <div class="editor-field">
                @Html.PasswordFor(model => model.password, new { data_val = false })
                @Html.ValidationMessageFor(model => model.password)
            </div>

                <div class="editor-label">
                @Html.LabelFor(model => model.ConfirmPassword, "Confirm Password (Optional)")
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ConfirmPassword, new { data_val = false })
                @Html.ValidationMessageFor(model => model.ConfirmPassword)
            </div>            

            @if ((SiteRoles)HttpContext.Current.Session["role"] == SiteRoles.Developer)
            {
                <div class="editor-label">
                    @Html.LabelFor(model => model.user_role)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.user_role)
                    @Html.ValidationMessageFor(model => model.user_role)
                </div>
            }
            
            <div class="spacer20"></div>
            
            <p>
                <input type="submit" value="Save" />
            </p>
        </fieldset>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>


