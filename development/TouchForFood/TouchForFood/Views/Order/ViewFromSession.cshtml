@model TouchForFood.ViewModels.OrderVM
@using TouchForFood.App_GlobalResources
@using TouchForFood.Models
@using TouchForFood.Util.Order

@{
    ViewBag.Title = "Details";
}
<div class="one-third column ">
    &nbsp;</div>
<div class="one-third column">
    @if (@Model.order == null)
    {
        <h5 class="main-blue">
            You do not have any Orders created</h5>
    }
    else
    {
        <h3 class="main-green">
            Order</h3>
        
        <fieldset>
            <div id="order-username">
                Ordered by: @Html.DisplayFor(model => model.order.user.username)</div>
                @{
                  var time = String.Format("{0:dd MMM yyyy HH:mm:ss}", Model.order.timestamp);
                }
            <div id="order-timestamp">@Html.DisplayFor(model => time)</div>
            <div id="order-table-status">
                <span id="order-table" class="go-left">Table #@Html.DisplayFor(model => model.order.table.id)</span>
                <span id="order-status" class="go-right">Status: @TouchForFood.Models.OrderStatusHelper.GetOrderStatusName(Model.order.order_status)</span>
                <div class="clear">
                </div>
            </div>
            <div id="order-waiter">
                Your waiter today is @Html.DisplayFor(model => model.order.waiter.first_name)</div>
            <div class="spacer20">
            </div>
            <div id="order-column-headers">
                <span class="go-left">
                    <label for="name">
                        Name</label></span> <span class="go-right">
                            <label for="total">
                                Total</label></span>
                <div class="clear">
                </div>
            </div>
            <div id="order-view">
                @foreach (var orderItemVm in @Model.orderItemVMs)
                {
                    <span class="go-left">
                        @if ((orderItemVm.order_item.order_item_status != (int)OrderStatusHelper.OrderItemStatusEnum.PROCESSING &&
                                orderItemVm.order_item.order_item_status != (int)OrderStatusHelper.OrderItemStatusEnum.DELIVERED) &&
                                (@Model.order.order_status == (int)OrderStatusHelper.OrderStatusEnum.EDITING ||
                                @Model.order.order_status == (int)OrderStatusHelper.OrderStatusEnum.OPEN))
                        {
                            @Html.ActionLink("Remove", "RemoveOrderItem", "Order_Item", new { id = orderItemVm.order_item.id }, new { });
                        }
                        @Html.DisplayFor(model => orderItemVm.menu_item.item.name)
                    </span>
                    <span class="go-right">
                    @if (orderItemVm.order_item_status == (int)OrderStatusHelper.OrderItemStatusEnum.REJECTED)
                    {
                        <span class="go-right">&nbsp;&nbsp;&nbsp;@OrderStatusHelper.GetOrderItemStatusName(orderItemVm.order_item_status)</span>
                    }
                    else
                    {
                        @Html.DisplayFor(model => orderItemVm.menu_item.price)
                    }
                    </span>
                    <div class="clear"></div>
                    <span class="go-left">
                    &nbsp;&nbsp;
                    @if (orderItemVm.side == null)
                    {
                        @: None
                    }
                    else
                    {
                        @Html.DisplayFor(model => orderItemVm.side.name)
                    }   
                    </span>
                    <div class="clear"></div>
                }
            </div>
            <div class="go-right">
                =========</div>
            <div class="clear">
            </div>
            <div class="display-field">
                <p class="go-right">@Html.DisplayFor(model => model.order.total)</p>
                @*This is the complete total of the order*@
            </div>

        </fieldset>        
        
                if (@Model.order.order_status == (int)OrderStatusHelper.OrderStatusEnum.EDITING ||
                    @Model.order.order_status == (int)OrderStatusHelper.OrderStatusEnum.OPEN ||
                    @Model.order.order_status == null)
                {
                    //Option to re-finalize
        <div>
            @using (Html.BeginForm("Cancel", "Order", new { id = @Model.order.id }, FormMethod.Post))
            {
                <span class="go-right">
                    <input type="submit" value="Cancel" /></span> @*Doesn't do anything yet*@
            }
            @using (Html.BeginForm("Finalize", "Order", FormMethod.Post))
            {
                <span class="go-right">
                    <input type="submit" value="Finalize" /></span>
            }
            <div class="clear">
            </div>
        </div>
                }
                else
                {
        <div>
            @*//Option to view status of the item*@
            @if (@Model.order.order_status == (int)OrderStatusHelper.OrderStatusEnum.PROCESSING)
            {
                using (Html.BeginForm("ManageBills", "Bill", new { id = @Model.order.id }, FormMethod.Post))
                {
                    <span class="go-right">
                        <input type="submit" value="Manage Bills" /></span>
                }
            }
            @*//Option to view status of the item*@
            @using (Html.BeginForm("ViewOrderStatus", "Order", new { id = @Model.order.id }, FormMethod.Post))
            {
                <span class="go-right">
                    <input type="submit" value="View Order Status" /></span>
            }
            @*//Option to begin editing*@
            @if (@Model.order.order_status == (int)OrderStatusHelper.OrderStatusEnum.PLACED)
            {
                using (Html.BeginForm("Editing", "Order", new { id = @Model.order.id }, FormMethod.Post))
                {
                    <span class="go-right">
                        <input type="submit" value="Edit Order" /></span>
                }
            }
            <div class="clear">
            </div>
        </div>
                }
@*        
            <p>
                @Html.ActionLink("Edit", "Edit", new { id = Model.order.id }) |
                @Html.ActionLink("Back to List", "Index")
            </p>*@
        
    }
</div>
@*<div class="one-third column">
    @if (@Model.order == null)
    {
        <h5 class="main-blue">You do not have any Orders created</h5>
    }
    else
    {
        <h3 class="main-green">Order</h3>
        
        <fieldset>
            <table>    
                <thead><tr><th>Qty.</th><th>Desc.</th><th>Total</th></tr></thead>
            </table>
            <div class="display-label">timestamp</div>
            <div class="display-field">
                @Html.DisplayFor(model => model.order.timestamp)
            </div>

            <div class="display-label">total</div>
            <div class="display-field">
                @Html.DisplayFor(model => model.order.total)
            </div>

            <div class="display-label">table_number</div>
            <div class="display-field">
                @Html.DisplayFor(model => model.order.table.id)
            </div>

            <div class="display-label">order_status</div>
            <div class="display-field">
            @TouchForFood.Models.OrderStatusHelper.GetOrderStatusName(Model.order.order_status)
            </div>

            <div class="display-label">user</div>
            <div class="display-field">
                @Html.DisplayFor(model => model.order.user.username)
            </div>

            <div class="display-label">waiter</div>
            <div class="display-field">
                @Html.DisplayFor(model => model.order.waiter.first_name)
            </div>

            <div class="display-label">version</div>
            <div class="display-field">
                @Html.DisplayFor(model => model.order.version)
            </div>

            <table id="menu_table">    
            <thead><tr><th> ITEM</th><th> NOTE</th><th> TYPE</th></tr></thead>
                @foreach (var orderItemVm in @Model.orderItemVMs)
                {
                    <tr id="@orderItemVm.order_item.id">
                        <td>                      
                            <div class="display-field">
                                @Html.DisplayFor(model => orderItemVm.menu_item.item.name)
                            </div>
                        </td>
                        <td>
                            <div class="display-field">
                                @Html.DisplayFor(model => orderItemVm.order_item.note)
                            </div>
                        </td>
                        <td>
                            <div class="display-field">
                                @TouchForFood.Models.OrderStatusHelper.GetOrderItemStatusName(orderItemVm.order_item.order_item_status)
                            </div>
                        </td>                 
                        <td>
                            @if ((orderItemVm.order_item.order_item_status != (int)OrderStatusHelper.OrderItemStatusEnum.PROCESSING &&
                                orderItemVm.order_item.order_item_status != (int)OrderStatusHelper.OrderItemStatusEnum.DELIVERED) &&
                                @Model.order.order_status == (int)OrderStatusHelper.OrderStatusEnum.EDITING)
                            {
                                @Html.ActionLink("Remove", "RemoveOrderItem", "Order_Item", new { id = orderItemVm.order_item.id }, new { });
                            }                     
                        </td>
                    </tr>    
                }
            </table>
        </fieldset>        
        
        if (@Model.order.order_status == (int)OrderStatusHelper.OrderStatusEnum.EDITING ||
            @Model.order.order_status == (int)OrderStatusHelper.OrderStatusEnum.OPEN ||
            @Model.order.order_status == null)
        {
            //Option to re-finalize
            using (Html.BeginForm("Finalize", "Order", FormMethod.Post))
            {
            <input type="submit" value="Finalize" />        
            }
        }
        else
        {
            //Option to begin editing
            using (Html.BeginForm("Editing", "Order", new { id = @Model.order.id }, FormMethod.Post))
            {
            <input type="submit" value="Edit Order" />        
            }
        }        
        <p>
            @Html.ActionLink("Edit", "Edit", new { id = Model.order.id }) |
            @Html.ActionLink("Back to List", "Index")
        </p>
    }
</div>*@ 